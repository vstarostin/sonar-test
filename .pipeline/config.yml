general:
  buildTool: 'golang'
  containerImageName: 'azure-demo-k8s-go'
  createResultIssue: true
  githubApiUrl: 'https://github.tools.sap/api/v3'
  pipelineOptimization: true
  productiveBranch: 'main'
  owner: project-piper
  repository: azure-demo-k8s-go
  vaultBasePath: 'piper/PIPELINE-GROUP-2668'
  vaultPipelineName: 'PIPELINE-13913'
  vaultServerUrl: 'https://vault.tools.sap'
  vaultNamespace: 'ies/hyperspace/pipelines'
  nativeBuild: true
  verbose: true
  
stages:
  Build:
    sonarExecuteScan: true
    karmaExecuteTests: false
    kanikoExecute: false
    helmExecute: false
    chartPath: helm/azure-demo-k8s-go
#   Acceptance:
#     namespace: 'go-acceptance'
#     helmValues: 
#       - helm/azure-demo-k8s-go/values_acceptance.yaml
    # Providing this, as a secret with default name is already present in cluster
    # this secret will be created on the fly by go step
#     containerRegistrySecret: 'regsecretgo'
#   Performance:
#     kubernetesDeploy: false
#   Release:
    # Make sure namespace exists in the cluster
#     namespace: 'go-release'
#     helmValues:
#       - helm/azure-demo-k8s-go/values_release.yaml
#     kubernetesDeploy: true
    # this secret should be already present in the above namespace
#     containerRegistrySecret: 'regsecretgo'
    # hardocode url for release . 
#     containerRegistryUrl: 'https://deploy-releases-hyperspace-docker.common.repositories.cloud.sap'
steps:
  artifactPrepareVersion:
    versioningType: cloud_noTag
    additionalTargetTools:
    - helm
  golangBuild:
    createBOM: false
    runTests: false
    reportCoverage: false
    runLinter: true
#   checkmarxExecuteScan:
#     projectName: 'azure-demo-k8s-go'
#     preset: '100099'
#     # serverUrl: 'https://cx.wdf.sap.corp:443'
#     teamId: 'b75c657f-55c7-483c-ac76-9589f378fa75'
#     vulnerabilityThresholdLow: 0
#   kubernetesDeploy:
#     chartPath: helm/azure-demo-k8s-go
#     deployTool: helm3
#     deploymentName: azure-demo-k8s-go
  sapCallStagingService:
    url: 'https://staging.repositories.cloud.sap/stage/api'
    profile: 'group-2668-default'
#   sapCheckPPMSCompliance:
#     createBuildVersion: true
#     uploadChangeRequest: true
#     ppmsID: '73555000100200012682'
  sapCumulusUpload:
     pipelineId: '95f1e305-00a6-4399-a0c8-4268041ab576'
  sonarExecuteScan:
    serverUrl: 'https://sonar.tools.sap'
#   whitesourceExecuteScan:
#     buildDescriptorFile: go.mod
#     cvssSeverityLimit: 10
  
